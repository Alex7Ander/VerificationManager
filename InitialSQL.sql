BEGIN TRANSACTION;
PRAGMA foreign_keys=on;

DROP TABLE IF EXISTS Tolerance_params;
DROP TABLE IF EXISTS Results;
DROP TABLE IF EXISTS Verifications;
DROP TABLE IF EXISTS Elements;
DROP TABLE IF EXISTS Devices;

CREATE TABLE [Devices] (
id INTEGER PRIMARY KEY AUTOINCREMENT, 
NameOfDevice TEXT, 
TypeOfDevice TEXT,  
SerialNumber TEXT, 
Owner TEXT, 
GosNumber TEXT);

CREATE TABLE [Elements] (
id INTEGER PRIMARY KEY AUTOINCREMENT, 
DeviceId INTEGER,
ElementType TEXT, 
ElementSerNumber TEXT, 
PoleCount INTEGER, 
MeasUnit TEXT, 
ModuleToleranceType TEXT, 
PhaseToleranceType TEXT, 
NominalId INTEGER,
FOREIGN KEY (DeviceId) REFERENCES Devices(id) ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (NominalId) REFERENCES Results(id) ON UPDATE CASCADE ON DELETE CASCADE);

CREATE TABLE [Verifications] (
id	INTEGER PRIMARY KEY AUTOINCREMENT,
DeviceId INTEGER,
VerificationDate TEXT,
PathOfDoc TEXT,
PathOfProtocol TEXT,
TypeOfDoc TEXT,
FOREIGN KEY (DeviceId) REFERENCES Devices(id) ON UPDATE CASCADE ON DELETE CASCADE);

CREATE TABLE [Results] (
id INTEGER PRIMARY KEY AUTOINCREMENT,
ElementId INTEGER,
MeasDate TEXT,
ValuesTable TEXT,
FOREIGN KEY (ElementId) REFERENCES Elements(id) ON UPDATE CASCADE ON DELETE CASCADE);

CREATE TABLE [Tolerance_params] (id INTEGER PRIMARY KEY AUTOINCREMENT,
ElementId INTEGER,
PRIMARY_MODULE_table TEXT,
PRIMARY_PHASE_table TEXT,
PERIODIC_MODULE_table TEXT,
PERIODIC_PHASE_table TEXT,
FOREIGN KEY (ElementId) REFERENCES Elements(id) ON UPDATE CASCADE ON DELETE CASCADE);
COMMIT;